apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def releaseTime() {
  return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def keyStore = file('beautiful.keystore')

android {
  def androidConfig = rootProject.ext.android

  compileSdkVersion androidConfig.compileSdkVersion
  buildToolsVersion androidConfig.buildToolsVersion

  defaultConfig {
    applicationId androidConfig.applicationId
    minSdkVersion androidConfig.minSdkVersion
    targetSdkVersion androidConfig.targetSdkVersion
    versionCode androidConfig.versionCode
    versionName androidConfig.versionName
  }
  buildTypes {
    release {
      // 不显示Log
      buildConfigField "boolean", "LOG_DEBUG", "false"

      debuggable false
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      if (keyStore.exists()) {
        println "using nicodelee's key"
        signingConfig signingConfigs.debug
      } else {
        println "---------------using default key---------------"
      }

      applicationVariants.all { variant ->
        variant.outputs.each { output ->
          def outputFile = output.outputFile
          if (outputFile != null && outputFile.name.endsWith('.apk')) {
            def fileName = "Beautyarticle-V${defaultConfig.versionName}.apk"
            //                        def fileName = "Beautyarticle-V${defaultConfig.versionName}_${releaseTime()}.apk"
            output.outputFile = new File(outputFile.parent, fileName)
          }
        }
      }
    }
  }
  packagingOptions {
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
  }

  signingConfigs {
    debug {
      storeFile file("beautiful.keystore")
      storePassword "com.nicodelee"
      keyAlias "android"
      keyPassword "com.nicodelee"
    }
  }

}

repositories {
  flatDir {
    dirs 'libs'
  }
}


dependencies {
  def dependencies = rootProject.ext.dependencies

  compile fileTree(dir: 'libs', include: ['*.jar'])

  compile dependencies["com.android.support:design"]
  compile dependencies["com.android.support:appcompat-v7"]
  compile dependencies["com.android.support:recyclerview-v7"]

  compile dependencies["com.nostra13.universalimageloader"]
  compile dependencies["de.greenrobot.eventbus"]
  compile dependencies["com.github.johnkil.android-appmsg"]
  compile dependencies["uk.co.chrisjenx.calligraphy"]
  compile dependencies["com.squareup.retrofit"]
  compile dependencies["com.squareup.okhttp"]
  compile dependencies["com.jakewharton:butterknife"]
  apt dependencies["com.raizlabs.android.dbflow.compiler"]
  compile dependencies["com.raizlabs.android.dbflow.core"]
  compile dependencies["com.raizlabs.android.dbflow"]
  compile dependencies["com.daimajia.numberprogressbar"]
  compile dependencies["com.github.clans.fab"]
  compile dependencies["io.reactivex.rxandroid"]
  compile dependencies["javax.annotation"]
  apt dependencies["com.google.dagger.compiler"]
  compile dependencies["com.google.dagger"]
  compile dependencies["fastScroll"]
  compile dependencies["cam2"]
//  compile dependencies["smooth-app-bar-layout"]

  //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
  //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

  compile project(':libraries:CommLib')
  compile project(':libraries:MeterialSettingLib')
  compile project(':libraries:multi-image-selector')
  compile project(':libraries:sociallibrary')
}

apply plugin: 'me.tatarka.retrolambda'